#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

npm run pre-commit

echo "üîí Ejecutando verificaciones de seguridad..."

# Verificar que no hay archivos sensibles en el staging area
if git diff --cached --name-only | grep -E "\.(env|pem|key|p12|pfx|crt|csr)$|secrets\.json|credentials\.json"; then
  echo "‚ùå ERROR: Archivos sensibles detectados en el staging area!"
  echo "   Los siguientes archivos no deben ser committeados:"
  git diff --cached --name-only | grep -E "\.(env|pem|key|p12|pfx|crt|csr)$|secrets\.json|credentials\.json"
  echo ""
  echo "üí° Soluciones:"
  echo "   1. Agrega estos archivos a .gitignore"
  echo "   2. Usa 'git reset HEAD <archivo>' para remover del staging"
  echo "   3. Usa variables de entorno en lugar de archivos de configuraci√≥n"
  exit 1
fi

# Verificar que no hay secrets en el contenido de los archivos
if git diff --cached | grep -E "(api[_-]?key|secret|password|token|auth)" | grep -v "example\|test\|mock"; then
  echo "‚ùå ERROR: Posibles secrets detectados en el c√≥digo!"
  echo "   Revisa el contenido de los archivos antes de hacer commit"
  echo ""
  echo "üí° Recomendaciones:"
  echo "   1. Usa variables de entorno para secrets"
  echo "   2. Usa archivos .env.example para documentar variables"
  echo "   3. Nunca hardcodees secrets en el c√≥digo"
  exit 1
fi

# Ejecutar script de verificaci√≥n de seguridad
if [ -f "scripts/security-check.js" ]; then
  node scripts/security-check.js
  if [ $? -ne 0 ]; then
    echo "‚ùå Verificaci√≥n de seguridad fall√≥"
    exit 1
  fi
fi

echo "‚úÖ Verificaciones de seguridad completadas" 