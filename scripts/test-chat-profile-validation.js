/**
 * üß™ TEST: Nueva validaci√≥n de chat simplificada
 * ============================================
 * 
 * Prueba que el chat ahora solo requiere informaci√≥n personal + negocio
 * en lugar de todos los requisitos anteriores (tienda, WhatsApp, etc.)
 */

console.log('üß™ [TEST] Iniciando prueba de validaci√≥n simplificada del chat...');

async function testChatProfileValidation() {
  try {
    console.log('\n1Ô∏è‚É£ Verificando estructura de funciones...');
    
    // Verificar que el archivo de validaci√≥n tiene las nuevas funciones
    const fs = require('fs');
    const path = require('path');
    
    const validatorPath = path.join(process.cwd(), 'src/lib/middleware/dashboard-access-validator.ts');
    
    if (!fs.existsSync(validatorPath)) {
      console.log('‚ùå No se encontr√≥ el archivo dashboard-access-validator.ts');
      return;
    }
    
    const validatorContent = fs.readFileSync(validatorPath, 'utf8');
    
    console.log('üìÅ Verificando funciones en dashboard-access-validator.ts:');
    console.log('   - validateProfileOnly:', validatorContent.includes('validateProfileOnly') ? '‚úÖ' : '‚ùå');
    console.log('   - validateChatAccess actualizado:', validatorContent.includes('validateProfileOnly(userId)') ? '‚úÖ' : '‚ùå');
    console.log('   - Validaci√≥n personal_info:', validatorContent.includes('personal_info') ? '‚úÖ' : '‚ùå');
    console.log('   - Validaci√≥n business_info:', validatorContent.includes('business_info') ? '‚úÖ' : '‚ùå');
    console.log('   - Validaci√≥n full_name:', validatorContent.includes('full_name') ? '‚úÖ' : '‚ùå');
    console.log('   - Validaci√≥n business_name:', validatorContent.includes('business_name') ? '‚úÖ' : '‚ùå');
    console.log('   - Validaci√≥n business_description:', validatorContent.includes('business_description') ? '‚úÖ' : '‚ùå');

    console.log('\n2Ô∏è‚É£ Verificando componentes de UI...');
    
    // Verificar ChatAccessGuard
    const chatGuardPath = path.join(process.cwd(), 'src/components/dashboard/chat-access-guard.tsx');
    
    if (fs.existsSync(chatGuardPath)) {
      const chatGuardContent = fs.readFileSync(chatGuardPath, 'utf8');
      
      console.log('üì± Verificando ChatAccessGuard:');
      console.log('   - Mensaje personal_info:', chatGuardContent.includes('informaci√≥n personal') ? '‚úÖ' : '‚ùå');
      console.log('   - Mensaje business_info:', chatGuardContent.includes('informaci√≥n de tu negocio') ? '‚úÖ' : '‚ùå');
      console.log('   - T√≠tulo actualizado:', chatGuardContent.includes('Perfil Requerido') ? '‚úÖ' : '‚ùå');
      console.log('   - Descripci√≥n actualizada:', chatGuardContent.includes('perfil personal y de negocio') ? '‚úÖ' : '‚ùå');
    } else {
      console.log('‚ùå No se encontr√≥ ChatAccessGuard');
    }

    // Verificar ChatPreview
    const chatPreviewPath = path.join(process.cwd(), 'src/components/dashboard/chat-preview.tsx');
    
    if (fs.existsSync(chatPreviewPath)) {
      const chatPreviewContent = fs.readFileSync(chatPreviewPath, 'utf8');
      
      console.log('üì± Verificando ChatPreview:');
      console.log('   - Mensaje personal_info:', chatPreviewContent.includes('informaci√≥n personal') ? '‚úÖ' : '‚ùå');
      console.log('   - Mensaje business_info:', chatPreviewContent.includes('informaci√≥n de tu negocio') ? '‚úÖ' : '‚ùå');
      console.log('   - T√≠tulo actualizado:', chatPreviewContent.includes('Perfil Requerido') ? '‚úÖ' : '‚ùå');
      console.log('   - Descripci√≥n actualizada:', chatPreviewContent.includes('perfil personal y de negocio') ? '‚úÖ' : '‚ùå');
    } else {
      console.log('‚ùå No se encontr√≥ ChatPreview');
    }

    console.log('\n3Ô∏è‚É£ Verificando endpoint de validaci√≥n...');
    
    const accessValidationPath = path.join(process.cwd(), 'src/app/api/chat/access-validation/route.ts');
    
    if (fs.existsSync(accessValidationPath)) {
      const accessValidationContent = fs.readFileSync(accessValidationPath, 'utf8');
      
      console.log('üîç Verificando endpoint /api/chat/access-validation:');
      console.log('   - Usa validateChatAccess:', accessValidationContent.includes('validateChatAccess') ? '‚úÖ' : '‚ùå');
      console.log('   - Endpoint correcto:', accessValidationContent.includes('GET') ? '‚úÖ' : '‚ùå');
    } else {
      console.log('‚ùå No se encontr√≥ el endpoint de validaci√≥n');
    }

    console.log('\n4Ô∏è‚É£ Validando l√≥gica de campos requeridos...');
    
    // Verificar que la nueva l√≥gica est√° presente
    const hasPersonalInfoCheck = validatorContent.includes('hasPersonalInfo') && 
                                 validatorContent.includes('full_name');
    const hasBusinessInfoCheck = validatorContent.includes('hasBusinessInfo') && 
                                validatorContent.includes('business_name') &&
                                validatorContent.includes('business_type') &&
                                validatorContent.includes('business_description');
    
    console.log('üîç Validando l√≥gica de campos:');
    console.log('   - Verificaci√≥n informaci√≥n personal:', hasPersonalInfoCheck ? '‚úÖ' : '‚ùå');
    console.log('   - Verificaci√≥n informaci√≥n negocio:', hasBusinessInfoCheck ? '‚úÖ' : '‚ùå');
    
    if (hasPersonalInfoCheck && hasBusinessInfoCheck) {
      console.log('‚úÖ ¬°L√≥gica de validaci√≥n simplificada implementada correctamente!');
    } else {
      console.log('‚ö†Ô∏è  Faltan algunos checks de validaci√≥n');
    }

    console.log('\n‚úÖ Prueba de validaci√≥n simplificada completada');
    console.log('üìã Resumen de cambios implementados:');
    console.log('   ‚úÖ Nueva funci√≥n validateProfileOnly()');
    console.log('   ‚úÖ validateChatAccess() actualizada para usar validaci√≥n simplificada');
    console.log('   ‚úÖ Mensajes de UI actualizados en componentes');
    console.log('   ‚úÖ Solo requiere: informaci√≥n personal + negocio');
    console.log('   ‚úÖ Ya NO requiere: tienda, WhatsApp, suscripci√≥n');
    
    console.log('\nüöÄ Para probar en producci√≥n:');
    console.log('   1. Haz commit de los cambios');
    console.log('   2. Haz push a Vercel');
    console.log('   3. Prueba el chat con un usuario que tenga perfil completo');

  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.message);
    console.error('   Stack:', error.stack);
  }
}

// Ejecutar la prueba
testChatProfileValidation(); 